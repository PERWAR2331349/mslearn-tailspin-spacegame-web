# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

  # 1. Installer la version du SDK .NET requise
- task: UseDotNet@2
  displayName: 'Installer .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'   # Exemple : version 6 du SDK .NET

# 5. Générer un fichier d’information sur la build
- script: |
    echo "Pipeline: $(Build.DefinitionName)" > Tailspin.SpaceGame.Web/wwwroot/buildinfo.txt
    echo "Build ID: $(Build.BuildId)" >> Tailspin.SpaceGame.Web/wwwroot/buildinfo.txt
    echo "Build Number: $(Build.BuildNumber)" >> Tailspin.SpaceGame.Web/wwwroot/buildinfo.txt
  displayName: 'Écrire les infos de build'

# 6. Restaurer les dépendances .NET
- task: DotNetCoreCLI@2
  displayName: 'Restaurer dépendances .NET'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# 7. Build Debug
- task: DotNetCoreCLI@2
  displayName: 'Build Debug'
  inputs:
    command: 'build'
    arguments: '--configuration Debug'
    projects: '**/*.csproj'

# 8. Publish Debug
- task: DotNetCoreCLI@2
  displayName: 'Publier en Debug'
  inputs:
    command: 'publish'
    arguments: '--no-build --configuration Debug --output $(Build.ArtifactStagingDirectory)/Debug'
    projects: '**/*.csproj'

# 9. Build Release
- task: DotNetCoreCLI@2
  displayName: 'Build Release'
  inputs:
    command: 'build'
    arguments: '--configuration Release'
    projects: '**/*.csproj'

# 10. Publish Release
- task: DotNetCoreCLI@2
  displayName: 'Publier en Release'
  inputs:
    command: 'publish'
    arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
    projects: '**/*.csproj'

# 11. Sauvegarder les artefacts (Debug + Release)
- publish: $(Build.ArtifactStagingDirectory)
  displayName: 'Publier les artefacts'
  artifact: drop
